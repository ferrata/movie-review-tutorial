version: '3.8'

services:

  app:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - 8080:8080
      - 8081:8081
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: movies
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    restart: on-failure:3

  pgadmin:
    image: dpage/pgadmin4
    user: root
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
    volumes:
      - ./.data/pgadmin:/var/lib/pgadmin
      - ./postgres-servers.json:/pgadmin4/servers.json
    ports:
      - 8086:80
    entrypoint: >
      /bin/sh -c "
        /bin/echo 'postgres:5432:*:postgres:postgres' > /tmp/pgpassfile
        chmod 600 /tmp/pgpassfile
        /entrypoint.sh
      "
    restart: on-failure:3
